#!/usr/bin/env ruby
$:.push File.join(File.dirname(__FILE__),'..','lib')
require 'optparse'
require 'alicorn'

options = {}
OptionParser.new do |opts|
  opts.banner = "Alicorn is a tool for auto-scaling unicorn worker counts.
    It relies on unicorn's built-in Raindrops middleware (so make sure you have
    enabled it). It computes rough load scores based on separately averaged
    data sets. , \n\nUsage: alicorn [options]"
    opts.on( '-h', '--help', 'Display this screen' ) do
      puts opts
      exit
    end

  opts.on("--min-workers N", Integer, "the minimum number of workers to scale down to") do |v|
    options[:min_workers] = v
  end

  opts.on("--max-workers N", Integer, "the maximum number of workers to scale up to") do |v|
    options[:max_workers] = v
  end

  opts.on("--upward-step-size N", Integer, "the number of workers to add when scaling up") do |v|
    options[:upward_step_size] = v
  end

  opts.on("--downward-step-size N", Integer, "the number of workers to remove when scaling down") do |v|
    options[:downward_step_size] = v
  end

  opts.on("--url S", String, "raindrops URL to check, defaults to 127.0.0.1/_raindrops") do |v|
    options[:url] = v
  end

  opts.on("--sample-count N", Integer, "number of data points to check before scaling") do |v|
    options[:sample_count] = v
  end

  opts.on("--delay (seconds)", Float, "delay between checks") do |v|
    options[:delay] = v
  end

end.parse!
Alicorn::Scaler.new(options).scale!
